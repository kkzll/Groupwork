
*****************增加正误判断*******************

**************************增加注视点呈现时间****************************俩都是自己编的内容，ceil用以取整

<values>
/ pointtime = 0
</values>

<expressions>
/generationrandom = ceil(rand(400,600))
</expressions>


step1:定义item

<item redword_item>
/ 1="开心"
/ 2="赞叹" 
/ 3="团圆"
/ 4="美满"
/ 5="仁爱"
/ 6="甜蜜"
/ 7="诚心" 
/ 8="功勋"
/ 9="开朗"
/ 10="完满"
/ 11="垂死"
/ 12="惨败" 
/ 13="愤恨"
/ 14="诡计"
/ 15="患病"
/ 16="沦陷"
/ 17="苛刻" 
/ 18="魔鬼"
/ 19="囚禁"
/ 20="怨恨"
</item>

<item greenword_item>
/ 1="愚昧"
/ 2="颓废" 
/ 3="贪婪"
/ 4="衰亡"
/ 5="受贿"
/ 6="撒谎"
/ 7="杀戮" 
/ 8="倒闭"
/ 9="包庇"
/ 10="暴徒"
/ 11="爽朗"
/ 12="风趣" 
/ 13="浪漫"
/ 14="和美"
/ 15="博爱"
/ 16="和善"
/ 17="真情" 
/ 18="明智"
/ 19="勤恳"
/ 20="幽默"
</item>

<item welcome_item>
/ 1="welcome.jpg"
</item>

<item instruction_word1_item>
/ 1="word1.jpg"
</item>

<item instruction_word2_item>
/ 1="word2.jpg"
</item>

<item instruction_frustrationpractice_item>
/ 1="instruction_frustrationpractice.jpg"
</item>

<item instruction_frustrationformal_item>
/ 1="instruction_frustrationformal.jpg"
</item>

<item end_item>
/ 1="end.jpg"
</item>

<item end_all_item>
/ 1="endall.jpg"
</item>

<item frustrationpracticea_item>
/ 1="practice1.jpg"
/ 2="practice2.jpg"
/ 3="practice3.jpg"
</item>

<item frustrationpracticeb_item>
/ 1="practice4.jpg"
/ 2="practice5.jpg"
</item>

<item frustrationformala_item>
/ 1="formal1.jpg"
/ 2="formal2.jpg"
</item>

<item frustrationformal3_item>
/ 1="formal3.jpg"
</item>

<item point_item>
/ 1="+"
</item>

<item correct_item>
/ 1="√"
</item>

<item wrong_item>
/ 2="X"
</item>


step2:定义text，修饰item长什么样子，在屏幕中什么地方出现

<text redword_text>
/ items = redword_item
/ fontstyle = ("Agency FB", 8%, false, false, false, false, 5, 1)
/ txcolor = (0, 0, 0)
/ txcolor = (255,0,0)
/ txbgcolor = (0,0,0)
/ position = (50%,50%)
</text>

<text greenword_text>
/ items = greenword_item
/ fontstyle = ("Agency FB", 8%, false, false, false, false, 5, 1)
/ txcolor = (0,255,0)
/ txbgcolor = (0,0,0)
/ position = (50%,50%)
</text>

<text point_text>
/ items = point_item
/ fontstyle = ("Agency FB", 8%, false, false, false, false, 5, 1)
/ txcolor = (85,85,85)
/ txbgcolor = (0,0,0)
/ position = (50%,50%)
</text>

<text correct_text>
/ items = correct_item
/ fontstyle =  ("Agency FB", 8%, false, false, false, false, 5, 1)
/ txcolor = (0,255,0)
/ txbgcolor = (0,0,0)
/ position = (50%,70%)
</text>

<text wrong_text>
/ items = wrong_item
/ fontstyle =  ("Agency FB", 8%, false, false, false, false, 5, 1)
/ txcolor = (255,0,0)
/ txbgcolor = (0,0,0)
/ position = (50%,70%)
</text>

step3:定义试次，定义了刺激材料什么时间出现，被试做什么反应，什么是正确反应和错误反应

<trial redword_trial>
/ pretrialpause = 500
/ stimulustimes = [1 = point_text; 400 = redword_text]
/ validresponse = ("J","F")
/ correctresponse = ("J")
/ correctmessage = (correct_text,200)
/ errormessage = (wrong_text,200)

/ ontrialbegin = [values.pointtime = expressions.generationrandom]
/ ontrialbegin = [trial.redword_trial.insertstimulustime(text.point_text,0)]
/ ontrialbegin = [trial.redword_trial.insertstimulustime(text.redword_text,values.pointtime)]
/ ontrialend = [trial.redword_trial.clearstimulusframes()]

</trial>

<trial greenword_trial>
/ pretrialpause = 500
/ stimulustimes = [1 = point_text; 400 = greenword_text]
/ validresponse = ("J","F")
/ correctresponse = ("F")
/ correctmessage = (correct_text,200)
/ errormessage = (wrong_text,200)

/ ontrialbegin = [values.pointtime = expressions.generationrandom]
/ ontrialbegin = [trial.greenword_trial.insertstimulustime(text.point_text,0)]
/ ontrialbegin = [trial.greenword_trial.insertstimulustime(text.greenword_text,values.pointtime)]
/ ontrialend = [trial.greenword_trial.clearstimulusframes()]

</trial>
备注：这个需要3秒钟跳转
<trial welcome_trial>
/ stimulustimes = [1 = welcome_item]
/ validresponse = ("J","F")
/ correctresponse = ("F")
</trial>
备注：这个是按空格继续的（有最短时间限制）
<trial instruction_word1_trial>
/ stimulustimes = [1 = instruction_word1_item]
/ validresponse = ("J","F")
/ correctresponse = ("F")
</trial>
备注：这个是按空格继续的（有最短时间限制）
<trial instruction_word2_trial>
/ stimulustimes = [1 = instruction_word2_item]
/ validresponse = ("J","F")
/ correctresponse = ("F")
</trial>
备注：这个是按空格继续的（有最短时间限制）
<trial instruction_frustrationpractice_trial>
/ stimulustimes = [1 = instruction_frustrationpractice_item]
/ validresponse = ("J","F")
/ correctresponse = ("F")
</trial>
备注：这个是按空格继续的（有最短时间限制）
<trial instruction_frustrationformal_trial>
/ stimulustimes = [1 = instruction_frustrationformal_item]
/ validresponse = ("J","F")
/ correctresponse = ("F")
</trial>
备注：需设置3秒后跳转
<trial end_trial>
/ stimulustimes = [1 = end_item]
/ validresponse = ("J","F")
/ correctresponse = ("F")
</trial>
备注：需设置3秒后跳转
<trial end_all_trial>
/ stimulustimes = [1 = end_all_item]
/ validresponse = ("J","F")
/ correctresponse = ("F")
</trial>

<trial frustrationpracticea>
/ stimulustimes = [1 = frustrationpracticea_item]
/ validresponse = ("J","F")
/ correctresponse = ("J")
</trial>

<trial frustrationpracticeb>
/ stimulustimes = [1 = frustrationpracticeb_item]
/ validresponse = ("J","F")
/ correctresponse = ("F")
</trial>

<trial frustrationformala>
/ stimulustimes = [1 = frustrationpracticeb_item]
/ validresponse = ("J","F")
/ correctresponse = ("F")
</trial>

<trial frustrationformal3>
/ stimulustimes = [1 = frustrationpracticeb_item]
/ validresponse = ("J","F","Q")
/ correctresponse = ("Q")
</trial>
step4:定义block，规定了使用哪些试次，试次呈现的顺序

<block word_block>
/ screencolor = (256,256,256)
/ trials = [1-40 = noreplace(redword_trial,greenword_trial)]
</block>

<block welcome_block>
/ screencolor = (256,256,256)
/ trials = [welcome_trial,instruction_word1_trial]
</block>

<block instruction_frustrationpractice_block>
/ screencolor = (256,256,256)
/ trials = [end_trial,instruction_frustrationpractice_trial]
</block>

<block frustrationpractice_block>
/ screencolor = (256,256,256)
/ trials = [random(frustrationpracticea_trial,frustrationpracticeb_trial)]
</block>

<block instruction_frustrationformal_block>
/ screencolor = (256,256,256)
/ trials = [instruction_frustrationformal_trial]
</block>

<block frustrationformal_block>
/ screencolor = (256,256,256)
/ trials = [frustrationformala_trial,frustrationformal3_trial]
</block>

<block instruction_word2_block>
/ screencolor = (256,256,256)
/ trials = [end_trial,instruction_word2_trial]
</block>

<block end_block>
/ screencolor = (256,256,256)
/ trials = [end_all_trial]
</block>

step5:定义实验，组织呈现那些区块，以及区块呈现的顺序
<expt mainpart_expt>
/ blocks = [1 = welcome_block; 2 = word_block; 3 = instruction_frustrationpractice_block;
            4 = frustrationpractice_block; 5 = instruction_frustrationformal_block;
            6 = frustrationformal_block; 7 = instruction_word2_block; 8 = end_block]
</expt>

